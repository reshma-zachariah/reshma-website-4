@use 'sass:list';

@use 'layout';


[data-focused-card="true"] {
  z-index: layout.$z-index-focused-card;
}


// Number of columns in the main grid.
$_gridA-cols: 6;
$_gridB-cols: 4;
$_total-cols: 12;

// Gap between grid cells in all grids.
$_grid-gap: layout.$spacing;


$_gridA-col-width: 
    calc(
      (layout.$main-content-width - $_grid-gap * ($_gridA-cols - 1))
      / $_gridA-cols
    );


.main-content {
  padding: 0;
  width: layout.$main-content-width;
  margin: layout.$spacing auto;

  display: flex;
  flex-direction: column;
  gap: layout.$spacing;
}

.grid-container {
  display: grid;

  // Make the grid a containing block.
  //
  // https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Grid_Layout/Relationship_of_Grid_Layout#a_grid_container_as_containing_block
  position: relative;

  grid-template-columns: repeat($_total-cols, 1fr);
  grid-gap: $_grid-gap;

  // Calculate rows so that gridA has square cells.
  grid-auto-rows: $_gridA-col-width;
}


@function _grid-area($subgrid-cols, $row-start, $col-start, $row-span, $col-span) {
  $subcols: calc($_total-cols / $subgrid-cols);
  @return list.slash(
    $row-start, calc($subcols * ($col-start - 1) + 1),
    span $row-span, span calc($subcols * $col-span));
}

@function _gridA-area($row-start, $col-start, $row-span, $col-span) {
  @return _grid-area($_gridA-cols, $row-start, $col-start, $row-span, $col-span);
}

@function _gridB-area($row-start, $col-start, $row-span, $col-span) {
  @return _grid-area($_gridB-cols, $row-start, $col-start, $row-span, $col-span);
}



.grid-area-yt-gaming     { grid-area: _gridA-area(1, 1, 2, 2); }
.grid-area-salem         { grid-area: _gridA-area(1, 3, 2, 4); }
.grid-area-sj-sharks     { grid-area: _gridA-area(3, 1, 3, 3); }
.grid-desc-sj-sharks     { position: absolute; grid-row: 6; }
.grid-area-ninja         { grid-area: _gridA-area(3, 4, 1, 3); }
.grid-area-aapi          { grid-area: _gridA-area(4, 4, 3, 3); }
.grid-desc-aapi          { position: absolute; grid-row: 7; }
.grid-area-nymphs-tower  { grid-area: _gridB-area(6, 1, 3, 1); }
.grid-desc-nymphs-tower  { position: absolute; grid-row: 9; }
.grid-area-eyes          { grid-area: _gridB-area(6, 2, 1, 1); }
.grid-area-reel          { grid-area: _gridB-area(7, 2, 2, 2); }
.grid-area-pokemon       { grid-area: _gridB-area(7, 4, 2, 1); }
.grid-desc-pokemon       { position: absolute; grid-row: 9; }
.grid-area-amiibo        { grid-area: _gridB-area(9, 1, 2, 1); }
.grid-desc-amiibo        { position: absolute; grid-row: 11; }
.grid-area-play-magazine { grid-area: _gridB-area(9, 2, 2, 1); }
.grid-desc-play-magazine { position: absolute; grid-row: 11; }
.grid-area-wattam        { grid-area: _gridB-area(9, 3, 2, 2); }
.grid-desc-wattam        { position: absolute; grid-row: 11; }

.grid-area-music        { grid-area: _gridA-area(11, 5, 2, 2); }
.grid-area-wetransfer   { grid-area: _gridA-area(11, 1, 2, 4); }
